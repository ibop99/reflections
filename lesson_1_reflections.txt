Command:	diff -u old_file new_file (unified diff format)

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it displayed a - sign to show lines that existed in the old version but not in the new
	it displayed a + sign to show lines that appeared in the new version but were not in the old
	unchanged lines were not displayed. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
when
    Demonstrate a line of development
	Find where an error occured - at what point a feature was lost

What do you think are the pros and cons of manually choosing  to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    more control of development -
		You can decide what is a logical commit - size, new features, independent bug fixes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Projects that require multiple files require logical changes that effect more than one file

How can you use the commands git log and git diff to view the history of files?

    git log shows git id, auther, date and notes
	git diff id id shows additions in green and deletions in red

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
	